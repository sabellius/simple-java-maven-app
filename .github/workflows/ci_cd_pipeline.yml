name: Java CI with Maven

on:
  push:
    branches: ["master"]
env:
  REPO_NAME: simple-java-maven-app
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}

jobs:
  update-app-version:
    name: Calculate new app version
    runs-on: ubuntu-latest
    outputs:
      new_version: ${{ steps.set-version.outputs.new_version }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Increment Version
        id: set-version
        run: |
          OLD_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          IFS='.' read -r MAJOR MINOR PATCH <<< "$OLD_VERSION"
          NEW_VERSION="$MAJOR.$MINOR.$((PATCH+1))"
          echo "::set-output name=new_version::$NEW_VERSION"

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"
          architecture: x64

      - name: Update pom.xml
        run: mvn versions:set -DnewVersion=$NEW_VERSION

      - name: Commit Updated Version
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add pom.xml
          git commit -m "Increment version to ${{ steps.set-version.outputs.new_version }}"
          git push

  build-and-publish:
    needs: update-app-version
    name: Build and Publish Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_TOKEN }}

      - name: Build Docker Image
        run: docker build -t ${{ env.DOCKER_USERNAME }}/${{ env.REPO_NAME }}:${{ needs.update-app-version.outputs.new_version }} .

      - name: Push Docker Image
        run: docker push ${{ env.DOCKER_USERNAME }}/${{ env.REPO_NAME }}:${{ needs.update-app-version.outputs.new_version }}

  deploy:
    needs: [update-app-version, build-and-publish]
    name: Deploy image to EC2 instance
    runs-on: ubuntu-latest
    steps:
      - name: Install SSH Key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy Docker image to EC2
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
          docker pull ${{ env.DOCKER_USERNAME }}/${{ env.REPO_NAME }}:${{ needs.update-app-version.outputs.new_version }}
          docker stop $(docker ps -a -q) || true
          docker run -d -p 80:80 ${{ env.DOCKER_USERNAME }}/${{ env.REPO_NAME }}:${{ needs.update-app-version.outputs.new_version }}
          EOF
